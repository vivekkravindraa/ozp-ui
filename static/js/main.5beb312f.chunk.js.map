{"version":3,"sources":["actions/types.js","actions/index.js","components/Company.js","components/CompanyDetails.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["GET_COMPANIES_FETCH","GET_COMPANIES_ERROR","GET_COMPANIES_LOAD","getCompanies","dispatch","a","type","payload","axios","get","res","data","Promise","resolve","message","reject","Company","allSettled","setTimeout","props","getCompaniesAPI","this","companies","loading","error","length","map","item","index","onClick","customHistory","push","company","name","Component","connect","state","bindActionCreators","CompanyDetails","match","params","createBrowserHistory","App","history","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAAaA,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAqB,qBCKrBC,EAAe,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEAE1BD,EAAS,CAAEE,KAAMJ,EAAoBK,SAAS,IAFpB,SAIRC,IAAMC,IAAN,8CAJQ,YAIpBC,EAJoB,+BAOtBN,EAAS,CAAEE,KAAMN,EAAqBO,QAASG,EAAIC,OACnDP,EAAS,CAAEE,KAAMJ,EAAoBK,SAAS,IARxB,kBASfK,QAAQC,QAAQH,EAAIC,OATL,gEAa1BP,EAAS,CAAEE,KAAML,EAAqBM,QAAS,KAAIO,UACnDV,EAAS,CAAEE,KAAMJ,EAAoBK,SAAS,IAdpB,kBAenBK,QAAQG,OAAR,OAfmB,0DAAN,uDCAtBC,E,kLACiB,IAAD,OAClBJ,QAAQK,WAAW,CACjBC,YAAW,WACT,EAAKC,MAAMC,oBACV,S,+BAIG,IAAD,EAC+BC,KAAKF,MAAnCG,EADD,EACCA,UAAWC,EADZ,EACYA,QAASC,EADrB,EACqBA,MAE5B,OAAGD,EACM,2CACCC,EACD,4BAAIA,IAGT,gCACE,8CAAiBF,EAAUG,UAC1BH,EAAUI,KAAI,SAACC,EAAMC,GACpB,OAAO,8BACL,mBAAGC,QAAS,kBAAMC,EAAcC,KAAd,qBAAiCJ,EAAKK,QAAQC,QAAhE,SACGN,EAAKK,QAAQC,QAFDL,a,GArBPM,aA0CtB,IAMeC,eAff,SAAyBC,GAEvB,MAAO,CACLd,UAAWc,EAAMd,UACjBC,QAASa,EAAMb,QACfC,MAAOY,EAAMZ,UAIU,SAACpB,GAC1B,OAAOiC,6BAAmB,CACxBjB,gBAAiBjB,GAChBC,KAGU+B,CAA6CnB,GCrDvCsB,E,oNAKb,OACI,8BACI,4BAAIjB,KAAKF,MAAMoB,MAAMC,OAAOP,a,GAPAC,aCI/BJ,EAAgBW,cAERC,E,uKAEjB,OACE,cAAC,IAAD,CAAQC,QAASb,EAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IACjC,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,UAAUC,UAAW9B,IACvC,cAAC,IAAD,CAAO6B,KAAK,mBAAmBC,UAAWR,a,GAPnBJ,aCIlBa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCDRQ,EAAe,CACjBlC,UAAW,GACXC,SAAS,EACTC,MAAO,M,QCEEiC,EAAQC,uBDCM,WAAmC,IAAlCtB,EAAiC,uDAAzBoB,EAAcG,EAAW,uCAEzD,OAAOA,EAAOrD,MACV,KAAKN,EACD,OAAO,2BACAoC,GADP,IAEId,UAAWqC,EAAOpD,UAE1B,KAAKN,EACD,OAAO,2BACAmC,GADP,IAEIZ,MAAOmC,EAAOpD,UAEtB,KAAKL,EACD,OAAO,2BACAkC,GADP,IAEIb,QAASoC,EAAOpD,UAExB,QACI,OAAO6B,KCpB2BwB,8BAAoBC,0BAAgBC,OAElFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.5beb312f.chunk.js","sourcesContent":["export const GET_COMPANIES_FETCH = 'GET_COMPANIES_FETCH';\nexport const GET_COMPANIES_ERROR = 'GET_COMPANIES_ERROR';\nexport const GET_COMPANIES_LOAD = 'GET_COMPANIES_LOAD';\n","import axios from 'axios';\nimport {\n    GET_COMPANIES_FETCH,\n    GET_COMPANIES_ERROR,\n    GET_COMPANIES_LOAD\n} from './types';\n\nexport const getCompanies = () => async (dispatch) => {\n    try {\n        dispatch({ type: GET_COMPANIES_LOAD, payload: true });\n\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users`)\n        if(res) {\n            // console.log(res.data);\n            dispatch({ type: GET_COMPANIES_FETCH, payload: res.data });\n            dispatch({ type: GET_COMPANIES_LOAD, payload: false });\n            return Promise.resolve(res.data);\n        }\n    } catch(err) {\n        // console.log(err);\n        dispatch({ type: GET_COMPANIES_ERROR, payload: err.message });\n        dispatch({ type: GET_COMPANIES_LOAD, payload: false });\n        return Promise.reject(err);\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getCompanies } from '../actions';\n\nimport { customHistory } from '../App';\n\nclass Company extends Component {\n  componentDidMount() {\n    Promise.allSettled([\n      setTimeout(() => {\n        this.props.getCompaniesAPI()\n      }, 3000)\n    ]);\n  }\n\n  render() {\n    const { companies, loading, error } = this.props;\n\n    if(loading) {\n      return <p>Loading...</p>\n    } else if(error) {\n      return <p>{error}</p>\n    } else {\n      return (\n        <div>\n          <h1>Companies - {companies.length}</h1>\n          {companies.map((item, index) => {\n            return <div key={index}>\n              <p onClick={() => customHistory.push(`/companies/${item.company.name}`)}>\n                {item.company.name}\n              </p>\n            </div>\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state);\n  return {\n    companies: state.companies,\n    loading: state.loading,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    getCompaniesAPI: getCompanies\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\n","import React, { Component } from 'react'\n\nexport default class CompanyDetails extends Component {\n    componentDidMount() {\n        // console.log(this.props.match.params.name);\n    }\n    render() {\n        return (\n            <div>\n                <p>{this.props.match.params.name}</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Company from './components/Company';\nimport CompanyDetails from './components/CompanyDetails';\n\nexport const customHistory = createBrowserHistory();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router history={customHistory}>\n        <Switch>\n          <Route exact path=\"/\" component={Company}></Route>\n          <Route exact path=\"/ozp-ui\" component={Company}></Route>\n          <Route path=\"/companies/:name\" component={CompanyDetails}></Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    GET_COMPANIES_FETCH,\n    GET_COMPANIES_ERROR,\n    GET_COMPANIES_LOAD\n} from '../actions/types';\n\nconst initialState = {\n    companies: [],\n    loading: true,\n    error: null\n}\n\nexport const rootReducer = (state = initialState, action) => {\n    // console.log(state, action);\n    switch(action.type) {\n        case GET_COMPANIES_FETCH:\n            return {\n                ...state,\n                companies: action.payload\n            }\n        case GET_COMPANIES_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case GET_COMPANIES_LOAD:\n            return {\n                ...state,\n                loading: action.payload\n            }\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'; \nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}